#include<stdio.h>

int is_even (int num);  // Declare the function

 
void main() {
	int num = 9467;
	int missing = is_even(num);
	printf("%d\n", missing);
}


int is_even(int num) {
	int n1 = num % 10;
	int answer = 0;
	
	if (num < 10) {
		if (num % 2 == 0) {
			answer = 1;
			return answer;
		}
		else
			answer = -1;
			return answer;
	}
	if (num == 0) {
		answer = 1;
	}
	else
		if (num % 2 == 0) {
			answer = 1;
		}
		else
			answer = -1;
	

	answer= answer + is_even(num/10);

	return answer;
}



////////////////////////////////////////////////////EX3
#include<stdio.h>
#include<string.h>
int numDuplicate(char,char,int);

int main() {
	int number;
	int n = 13;
	char s[]= { 'b','a','a','-','b','r','b','r','a','$','i', 'a','6'};
	char s1[] = "barbara";
	number = numDuplicate (s,s1,n);
	printf("The number is: %d \n", number);
}
int numDuplicate(char* s, char *s1, int *n){
	 int i=0;
	 int arrs[26] = { 0 };
	 int arrs1[26] = { 0 };

	while( i<n ) {
		if (s[0] <= 'z' && s[0] >= 'a') {
			arrs[*s-'a']++;
		}
		*s++;
		i++;
	}
	while (*s1) {
		arrs1[*s1 - 'a']++;
		s1++;
	}
	for (i = 0; i < 26; i++) {
		if (arrs1[i] > arrs[i]) {
			return 0;
		}
	}
	return 1;
}
	


//////////////////////////////////////////////////////////Ex5
#include<stdio.h>
#include<string.h>

#define R 4
#define C 3
int copySumMatrix(int[][C]);


int main() {
	int key = 3;
	int matriceA[R][C] = {{1,12,7},{23,13,25},{36,26,27},{38,39,48}};
	
	int answer = copySumMatrix(matriceA);
	printf("%d", answer);
}

int copySumMatrix(int matriceA[][C]) {
	int row;
	int col ; 
	int max=0,maxrow=0;
	int temp = 0;

	for (col = 0; col < C; col++) {
		temp = matriceA[0][col];
		if (temp > max) {
			max = temp; 
		}
	}

	for (row = 1; row < R; row++) {
		for (col = 0; col < C; col++) {
			if (max > matriceA[row][col]) {
				return -1;
			}

			temp = matriceA[row][col];
			if (temp > maxrow) {
				maxrow = temp;
			}
		}
		max = maxrow;
		maxrow = 0;

	}
	return 1;
}
 
