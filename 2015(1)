/////////////////////////////////////Ex1
#include<stdio.h>
//void newNum(int n); // Declare the function
int NewNumber(num);

int main() {
	int num = 879026;

	//int arr1[] = { -5,-2,12,25,34,40 };
	int t = NewNumber(num);
	printf("%d", t);
}

int NewNumber(num) {
	int newnum = num;
	if (num < 100) {
		num = 10 * (num % 10) + num / 10;
		return num;
	}

	return 100* NewNumber(num / 100) + NewNumber (num%100);

}
	
////////////////////////EX3
#include<stdio.h>
#include<string.h>
int checkletter(char, char);

int main() {
	char s1[30] = "bdacaabaabaab";
	char s2[30] = "abalc";
	int t = checkletter(s1,  s2);
	printf("%d", t);
}

int checkletter(char* s1, char* s2) {
	int i=0,k=0,counter=0;
	while (s2[i] != '\0') {
		for (k = 0; k < strlen(s1-1); k++) {
			if (s2[i] == s1[k]) {
				counter = counter +1;
				break;
			}
		 }
		if (counter < i + 1) {
			return 0; 
		}
		i++;
	}
	return 1;
	
}


//////////////////////////////////////EX4
#include<stdio.h>
#include<string.h>
#define N 4
int minmatrice(int[][N],int,int);


int main() {
	int matr[N][N] = { {6,12,3},{7,4,20},{8,90,9},{5,8,3}};
	int mnumber = minmatrice(matr,N,N);
	printf("%d", mnumber);
 
}

int minmatrice(int matrice[][N], int row, int col) {
	int min ; 
	int	temp;
	for (row = 1; row < N; row++) {
		for (col = 0; col < row; col++) {
			if (row == 1) {
				min = matrice[row][col];
				temp = min;
			}
			else
				temp = matrice[row][col];
			if (min > temp) {
				min = temp; 
			}
		}
	}
	return min;
}
